library(ggplot2)
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
library(ggplot2)
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
setwd('~git-repos/project-es3')
setwd('~/git-repos/project-es3')
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd('~/git-repos/project-es3')
getwd()
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
#linear regression for each factor against the outcome variable (months it takes to find job)
for (i in 1:ncol(data)){
print(ggplot(data, aes(x = data[[i]], y = months)) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
geom_jitter() +
labs(x = colnames(data)[i]))
}
#additional gpa graphs to remove values of 0.0 for GPA
ggplot(data, aes(x = major_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd('~/git-repos/project-es3')
getwd()
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
#linear regression for each factor against the outcome variable (months it takes to find job)
for (i in 1:ncol(data)){
print(ggplot(data, aes(x = data[[i]], y = months)) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
geom_jitter() +
labs(x = colnames(data)[i]))
}
#additional gpa graphs to remove values of 0.0 for GPA
ggplot(data, aes(x = major_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = gender, y = months)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
library(ggplot2)
#getwd()
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
#setwd('~/git-repos/project-es3')
#getwd()
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd('~/git-repos/project-es3')
#getwd()
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
#linear regression for each factor against the outcome variable (months it takes to find job)
#internship = 1, part time = 2, full time = 3
#female = 1, male = 0
for (i in 1:ncol(data)){
print(ggplot(data, aes(x = data[[i]], y = months)) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
geom_jitter() +
labs(x = colnames(data)[i]))
}
#additional gpa graphs to remove values of 0.0 for GPA
ggplot(data, aes(x = major_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = gender, y = months)) +
geom_point(alpha = 0.1 ) +
geom_smooth(method=lm)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd('~/git-repos/project-es3')
getwd()
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
#linear regression for each factor against the outcome variable (months it takes to find job)
#internship = 1, part time = 2, full time = 3
#female = 1, male = 0
for (i in 1:ncol(data)){
print(ggplot(data, aes(x = data[[i]], y = months)) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
geom_jitter() +
labs(x = colnames(data)[i]))
}
#additional gpa graphs to remove values of 0.0 for GPA
ggplot(data, aes(x = major_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
getwd()
setwd('~/git-repos/project-es3')
getwd()
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
#linear regression for each factor against the outcome variable (months it takes to find job)
#internship = 1, part time = 2, full time = 3
#female = 1, male = 0
for (i in 1:ncol(data)){
print(ggplot(data, aes(x = data[[i]], y = months)) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
geom_jitter() +
labs(x = colnames(data)[i]))
}
#additional gpa graphs to remove values of 0.0 for GPA
ggplot(data, aes(x = major_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
getwd()
data <- read.csv("././data/370_clean_num_2.csv") #has more records than clean_num
data <- read.csv("./data/370_clean_num_2.csv") #has more records than clean_num
data <- read.csv("../data/370_clean_num_2.csv") #has more records than clean_num
data <- read.csv('./data/clean_num.csv')
data <- read.csv('../data/clean_num.csv')
data <- read.csv("../data/370_clean_num_2.csv") #has more records than clean_num
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
#setwd('~/git-repos/project-es3')
data <- read.csv("../data/370_clean_num_2.csv") #has more records than clean_num
#linear regression for each factor against the outcome variable (months it takes to find job)
#internship = 1, part time = 2, full time = 3
#female = 1, male = 0
for (i in 1:ncol(data)){
print(ggplot(data, aes(x = data[[i]], y = months)) +
geom_point(alpha = 0.1) +
geom_smooth(method=lm) +
geom_jitter() +
labs(x = colnames(data)[i]))
}
#additional gpa graphs to remove values of 0.0 for GPA
ggplot(data, aes(x = major_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
ggplot(data, aes(x = cumulative_GPA, y = months)) +
geom_point(alpha = 0.1 ) +
xlim(2,4) +
geom_smooth(method=lm)
data <- read.csv('../data/clean_num.csv')
data <- read.csv('../data/clean_num.csv')
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_)
library(dplyr)
library(rpart)
library(rattle)
data <- data %>%
# reformat graduation data as date
mutate(graduation_date = as.Date(graduation_date, "%m/%d/%Y")) %>%
# split job type into 3 binary columns (1 = internship, 2 = part time, 3 = full time)
mutate(fulltime = ifelse(Job_type == 3, 1, 0)) %>%
mutate(parttime = ifelse(Job_type == 2, 1, 0)) %>%
mutate(internship = ifelse(Job_type == 1, 1, 0)) %>%
select(-Job_type) %>%
# convert months to classification variable (0 = >3mo., 1 = <3mo.)
mutate(Months = ifelse(Months <= 3, 1, 0)) %>%
# split class standing into 5 binary columns
mutate(freshman = ifelse(class_standing_ == 1, 1, 0)) %>%
mutate(sophomore = ifelse(class_standing_ == 2, 1, 0)) %>%
mutate(junior = ifelse(class_standing_ == 3, 1, 0)) %>%
mutate(senior = ifelse(class_standing_ == 4, 1, 0)) %>%
mutate(fifth.year = ifelse(class_standing_ == 5, 1, 0)) %>%
mutate(alumni = ifelse(class_standing_ == 6, 1, 0)) %>%
select(-class_standing_)
train <- data %>%
filter(None_of_these == 0 | None_of_these == 1 & Months == 0) %>% # | has_position == 0 & Months == 0
select(-None_of_these)
test <- data %>%
filter(None_of_these == 1 & Months == 1) %>% # | has_position == 0 & Months == 1
select(-None_of_these)
